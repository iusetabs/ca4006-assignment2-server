package hello;

import java.util.concurrent.atomic.AtomicLong;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import static org.springframework.web.bind.annotation.RequestMethod.*;

//java spring will handle the conversion of objects back to JSON.

@Controller
@RestController //Shorthand for @RESPONSEBODY. Indicates that domain object will be returned.
public class RoomsController {

    // Which is auto-generated by Spring, we will use it to handle the data
    private final RoomsRepository roomsRepository;

    public RoomsController(RoomsRepository XroomsRepository) {
        this.roomsRepository = XroomsRepository;
    } //Used to be @Autowired but this is bad practice. Replace with constructor for interface.
    // This means to get the bean called userRepository

    @RequestMapping(path="/rooms", method=GET)
    public @ResponseBody Iterable<Rooms> getAllRooms() {
        // This returns a JSON or XML with the users
        return this.roomsRepository.findAll();
    }
    @RequestMapping(path="/rooms", method=POST)
    public @ResponseBody Rooms addRoom(@RequestBody Rooms room) {
        this.roomsRepository.save(room);
        return room;
    }
    @RequestMapping(path="/rooms", method=DELETE)
    public @ResponseBody String deleteRoom(@RequestParam Integer id) {
        try{
            Rooms r = this.roomsRepository.findById(id).orElse(null);
            if (r == null)
                return "No object with id " + id + " exists";
            this.roomsRepository.delete(r);
            return "Object with id " + id + " deleted.";
        }
        catch(Exception e){
            return "Fail: " + e.getMessage();
        }
    }
}
